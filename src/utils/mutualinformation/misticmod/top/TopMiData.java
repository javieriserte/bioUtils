package utils.mutualinformation.misticmod.top;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.PrintStream;

import javax.print.attribute.standard.OutputDeviceAssigned;

import cmdGA2.CommandLine;
import cmdGA2.MultipleArgumentOption;
import cmdGA2.NoArgumentOption;
import cmdGA2.OptionsFactory;
import cmdGA2.SingleArgumentOption;
import cmdGA2.returnvalues.DoubleValue;
import cmdGA2.returnvalues.IntegerValue;

/**
 * Reads MI data generated by MISTIC or mortem soft.
 * Filter the values to keep the top MI pairs.
 * Top value cut-off can be set as a MI value, a percentage or a fixed number of
 * pairs.
 * 
 * @author Javier Iserte
 */
public class TopMiData {

	public static void main(String[] args) {
		
		////////////////////////////////////////
		// Create Command line 
		CommandLine cmd = new CommandLine();
		////////////////////////////////////////
		
		////////////////////////////////////////
		// Add Command line options
		SingleArgumentOption<InputStream> inOpt = OptionsFactory.createBasicInputStreamArgument(cmd);
		SingleArgumentOption<PrintStream> outOpt = OptionsFactory.createBasicPrintStreamArgument(cmd);
		MultipleArgumentOption<Double>    topPerOpt = new MultipleArgumentOption<Double>(cmd, "--toppercent", ',', null, new DoubleValue());
		MultipleArgumentOption<Integer>   topValOpt = new MultipleArgumentOption<Integer>(cmd, "--topvales", ',', null, new IntegerValue());
		SingleArgumentOption<Double>      cutOffOpt = new SingleArgumentOption<Double>(cmd, "--cutoff",new DoubleValue(),0d);
		NoArgumentOption                  helpOpt   = new NoArgumentOption(cmd, "--help");
		////////////////////////////////////////

		////////////////////////////////////////
		// Parse Command Line
		cmd.readAndExitOnError(args);
		////////////////////////////////////////
		
		////////////////////////////////////////
		// Check if help flat is present
		if (helpOpt.isPresent()) {
			System.err.println(TopMiData.getHelp());
			System.exit(0);
		}
		////////////////////////////////////////
		
		////////////////////////////////////////
		// Get Command line options
		BufferedReader in = new BufferedReader(new InputStreamReader(inOpt.getValue()));
		PrintStream out = outOpt.getValue();
		////////////////////////////////////////
		
		
		
	}
	
	
	////////////////////////////////////////////
	// Class Methods
	private static char[] getHelp() {
		return null;
	}
	////////////////////////////////////////////

}
